@using Microsoft.Owin.Security

<h4>Or, use another of your accounts to login!</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        string action = Model.Action;
        string returnUrl = Model.ReturnUrl;
        using (Html.BeginForm(action, "Account", new { ReturnUrl = returnUrl },FormMethod.Post,new { id = "extProviderForm" }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @Html.Hidden("Provider")
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        <a href="" class="extLoginBtn" style="width: 154px; height: 22px; display: block; background: url(../Content/images/Facebook-login-button.png)" name="@p.AuthenticationType"></a>
                    }
                </p>
            </div>
        }
    }
}